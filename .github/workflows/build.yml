name: Build

on:
  pull_request:
  push:
    branches:
      - 'master'
    tags:
      - '*'

jobs:
  build:
    runs-on: ${{ matrix.os || 'ubuntu-latest' }}
    strategy:
      fail-fast: false
      matrix:
        label:
          - Windows Nightly

        include:
          - label: Windows Nightly
            target: x86_64-pc-windows-msvc
            os: windows-latest
            toolchain: nightly-2024-06-27
            release: skip
            cross: skip

    steps:
      - name: Checkout Commit
        uses: actions/checkout@v4

      - name: Install Rust
        uses: hecrj/setup-rust-action@v2
        with:
          rust-version: ${{ matrix.toolchain || 'stable' }}

      - name: Install Target
        if: matrix.install_target != ''
        run: rustup target add ${{ matrix.target }}

      - name: Download cross
        if: matrix.cross == '' && matrix.no_std == ''
        uses: robinraju/release-downloader@v1.9
        with:
          repository: "cross-rs/cross"
          latest: true
          fileName: "cross-x86_64-unknown-linux-gnu.tar.gz"
          out-file-path: "/home/runner/.cargo/bin"

      - name: Install cross
        if: matrix.cross == '' && matrix.no_std == ''
        run: |
          cd ~/.cargo/bin
          tar -xzf cross-x86_64-unknown-linux-gnu.tar.gz

      - name: Test
        if: matrix.tests == ''
        run: sh .github/workflows/test.sh
        env:
          TARGET: ${{ matrix.target }}
          SKIP_CROSS: ${{ matrix.cross }}
          SKIP_AUTO_SPLITTING: ${{ matrix.auto_splitting }}
          SKIP_NETWORKING: ${{ matrix.networking }}
          SKIP_SOFTWARE_RENDERING: ${{ matrix.software_rendering }}

      - name: Upload screenshots
        if: matrix.tests == '' && (success() || failure())
        uses: actions/upload-artifact@v4
        with:
          name: Screenshots ${{ matrix.label }}
          path: target/renders
